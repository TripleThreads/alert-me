@inject SignInManager<AlertMe.Models.User> SignInManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<div class="row">
    <div class="col-7">
        <ul class="nav nav-pills nav-pills-primary flex-column" id="sidebar">
            <li class="@ManageNavPages.IndexNavClass(ViewContext) nav-item">
                <a class="nav-link" asp-page="./Index">Profile</a>
            </li>
            <li class="@ManageNavPages.ChangePasswordNavClass(ViewContext) nav-item">
                <a  class="nav-link" id="change-password" asp-page="./ChangePassword">Password</a>
            </li>
            @if (hasExternalLogins)
            {
                <li class="@ManageNavPages.ExternalLoginsNavClass(ViewContext) nav-item">
                    <a class="nav-link" id="external-login" asp-page="./ExternalLogins">External logins</a>
                </li>
            }
            <li class="@ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext) nav-item">
                <a class="nav-link" asp-page="./TwoFactorAuthentication">Two-factor authentication</a>
            </li>

            <li class="@ManageNavPages.PersonalDataNavClass(ViewContext) nav-item">
                <a class="nav-link" asp-page="./PersonalData">Personal data</a>
            </li>
        </ul>
    </div>
</div>
